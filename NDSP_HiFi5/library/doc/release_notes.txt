Library Release 4.3.2, January 2021-----
API:
- no changes
Others:
- fixed ferret warnings
- added flexible build support
Known issuses:
-------------------------------------
Library Release 4.3.1, November 2020-----
API:
- added 2D Convolution generic functions (without restrictions) 
Performance:
- improved performance of imgnorm and imgfastnorm 8-bit functions
- improved performance of stereo_bkfirf
- improved performance of vec_softmaxf
- improved performance of 2D Convolution fast functions
- improved performance of bqriir16x16_df2_nd, bqriir32x32_df2_nd
- slightly improved performance of imgfasthist_gs8, imghist_gs8, imgfasthist_gu8, imghist_gu8

Others:
- 2D Convolution functions use symmetric rounding instead of asymmetric rounding
- added sanity tests
- removed XT_NSA instruction
Known issuses:
- flexible build is not supported
-------------------------------------
Library Release 4.3.0, July 2020-----
API:
- added Cholesky for floating point and 32-bit fixed point
- added 2D Convolution, floating-point data
- added batch dot product
- added image processing part
- added vec_tanh_fp16, vec_sigmoid_fp16, scl_tanh_fp16, scl_sigmoid_fp16
  (half precision floating point) functions
- added IIR biquad filters with no end-to-end delay. Also added function requesting 
  actual algorithmic delay for faster IIR functions
Performance:
- Improved performance of fft( 16x16, 32x16) for some big sizes
- Improved performance of vec_sinf, vec_cosinef, vec_tanf functions
Others:
- added convergence tests for BLMS
- fixed problems with old LX hardware cores 
- added new global define HIFI_SIMD_WIDTH=16 instead of XCHAL_DATA_WIDTH
- fixed potential problems with memory for testing matrix operations 

library release 4.2.2, June 2019
-------------------------------------

Performance:
- improved bkfiraf_process, stereo_bkfirf_process, gccphatf, vec_add_32x16ef, 
  vec_mul_32x16ef, vec_mac_32x16ef, fft_cplx16x16, fft_cplx32x16, fft_cplx32x32, 
  ifft_cplx16x16, ifft_cplx32x16,  ifft_cplx32x32, fft_real16x16, fft_real32x16, 
  fft_real32x32, ifft_real16x16, ifft_real32x16, ifft_real32x32, fft_cplx32x32_ie, 
  stereo_fft_cplx32x32_ie, stereo_ifft_cplx32x32_ie, fft_cplxf_ie, ifft_cplxf_ie, 
  fft_realf_ie, ifft_realf_ie, mfccf_process
- reduced a code size for fir_xcorrf, fir_convolf, bkfirf_process, fir_interpf_2x,
  vec_softmax32x32, bkfiraf_process, cxfir_xcorraf, vec_sine32x32_fast, vec_reluf,
  vec_softmaxf, vec_cosine32x32, vec_relu32x32, vec_dot32x16_fast, vec_sqrt32x32_fast,
  vec_recip32x32, bkfira32x32_process, fft_spectrumf, vec_tanh32x32
Other:
- added conditionalization for cores not supporting XT_NSA instruction
- fixed bug with potential unaligned load exception in vec_sqrt64x32_hifi5

library release 4.21, April 2019
-------------------------------------
API changes:
- added vec_powf, scl_powf
- added implementation for: gccphat_32x32, gccphatf, rppafir32x32, rppafirf, cppafir32x32, 
  cppafirf, rppsfir32x32, rppsfirf, cppsfir32x32, cppsfirf, kalmanupd1_32x32, 
  kalmanupd1f, cmtx_mpyt32x32_fast, cmtx_mpytf_fast, cmtx_vecmpyt32x32_fast, 
  cmtx_vecmpytf_fast, cmtx_lrmpy32x32_fast, cmtx_lrmpyf_fast, htkdelta_32x32, htkdeltaf

Performance:
- improved stereo_bkfir32x32, fft_cplx32x16, fft_cplx32x32,ifft_cplx32x16,ifft_cplx32x32, 
fft_real32x16, fft_real32x32, ifft_real32x16, ifft_real32x32, fft_cplx16x16_ie, 
fft_cplx32x32_ie, ifft_cplx16x16_ie, ifft_cplx32x32_ie, stereo_fft_cplx16x16_ie, 
stereo_fft_cplx32x32_ie, stereo_ifft_cplx16x16_ie, stereo_ifft_cplx32x32_ie, 
fft_real16x16_ie, fft_real32x32_ie, ifft_real16x16_ie, ifft_real32x32_ie, mfcc32x32, 
bqriir16x16_df1, bqriir32x32_df1, vec_tan32x32, vec_sigmoid32x32, vec_tanh32x32, 
vec_recip32x32, vec_divide32x32, vec_divide32x32_fast, vec_mac_32x16ef, vec_dot_32x16ef, 

- improved for Neural Networks configs: mtx_mpy8x8, mtx_mpyt8x8, mtx_mpy8x16, 
mtx_mpyt8x16, vec_mpy8x8, vec_mpy8x16, mtx_transpose16x16



library release 4.20, March 2019
-------------------------------------
First release of library for HiFi5

Known issuses:
- one test (floating point lattice IIR) is failed under LLVM (but still working under xcc)
  due to the small error accumulation
- some functions are not implemented yet and will be available in the next release: 
  gccphat_32x32, gccphatf, rppafir32x32, rppafirf, cppafir32x32, cppafirf, rppsfir32x32, rppsfirf, 
  cppsfir32x32, cppsfirf, kalmanupd1_32x32, kalmanupd1f, cmtx_mpyt32x32_fast, cmtx_mpytf_fast, 
  cmtx_vecmpyt32x32_fast, cmtx_vecmpytf_fast, cmtx_lrmpy32x32_fast, cmtx_lrmpyf_fast, htkdelta_32x32, 
  htkdeltaf
- stereo 32bit FIRs for small M<=32 have not optimized for HiFi5 yet
- cycles for vec_scale16x16, vec_scale32x32 seems to be improved 
- cycles for FFTs of small sizes (<=64) will be improved by writing separate code for each of 
  them because the looping overhead seems too big
- cycles for real FFTs are expecting to bit better (10 to 15%) - will be reviewed
- cycles for 8x8, 8x16 generic matrix multiplies would be improved by using NN extension of the core 
  (fast variants already may would work with and without NN)


